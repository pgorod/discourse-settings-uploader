#!/usr/bin/env ruby
require 'json'
require 'rest-client'


if !ARGV[3]
  puts "discourse-settings-uploader DISCOURSE_URL API_KEY API_USERNAME SETTINGS_FILE"
  exit
end

SITE=ARGV[0]
API_KEY=ARGV[1]
API_USERNAME=ARGV[2]
SETTINGS=ARGV[3]

def put_no_ssl(url, payload, headers={}, &block)
  RestClient::Request.execute(method: :put, url: url, :payload => payload, headers: headers, verify_ssl: false, &block)
end
def psetting(setting)
  #puts "#{setting['category']}/#{setting['setting']} : #{setting['value']}"
  puts "SiteSetting#{setting['setting']}=\"#{setting['value']}\""
end
def jsetting(setting)
  url = "#{SITE}/admin/site_settings/#{setting['setting']}"
  value = setting['setting']
  my_hash = {value => setting['value']}
  my_hash[:api_key] = API_KEY
  my_hash[:api_username] = API_USERNAME
  psetting(setting)
  begin
    r = put_no_ssl(url, my_hash)
  rescue => e
    puts "E! #{e}"
    puts "something's wrong with #{url} #{my_hash}"
  end
  # API is rate limited to 60/minute. Sleep to stay under that
  sleep 1.1
end

settings_raw = File.read(SETTINGS)
settings = JSON.parse(settings_raw)
settings['site_settings'].each do |setting|
  jsetting (setting) unless setting['value'] == setting['default']
end
